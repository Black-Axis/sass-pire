@charset "UTF-8";

// @description
// * get-first-from function.
// * This module tests a functionality of get-first-from function.

// @access private

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @namespace list

// @module list/get-first-element.test

// @dependencies:
// * - True.describe (true function).
// * - True.it (true function).
// * - True.assert-equal (true function).
// * - Dev.err (function).

// stylelint-disable function-name-case

@use "sass:map";
@use "true" as *;
@use "../../../src/functions/list/get-first-element" as LibFunc;
@use "../../../src/development-utils/error" as Dev;

$test-cases-get-first-from-map: (
    (1, 2, 4): 1,
    344px: Dev.err("The parameter of get-first-from function must be in a list type."),
    (69, 48, 54, (32, (11, 43))): 69,
    ((true, false), (0, "Just a text"), (2, 32, 4)): true,
    (89, 48, 54, (32, (11, 43, (21, (11, "Yes"))))): 89,
    true: Dev.err("The parameter of get-first-from function must be in a list type."),
    "Just a number": Dev.err("The parameter of get-first-from function must be in a list type.")
);

@each $case, $result in $test-cases-get-first-from-map {
    @include describe("[Function] get-first-from(#{$case}), Result: #{$result}") {
        @include it("get-first-from(#{$case}).") {
            @include assert-equal(LibFunc.get-first-from($case), $result);
        }
    }
}
