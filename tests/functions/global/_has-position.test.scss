@charset "UTF-8";

// @description
// * has-pos function.
// * This module tests a functionality of has-pos function.

// @access private

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @namespace global

// @module global/has-position.test

// @dependencies:
// * - True.describe (true function).
// * - True.it (true function).
// * - True.assert-equal (true function).
// * - Dev.err (function).

// stylelint-disable number-max-precision
// stylelint-disable function-name-case

@use "../../../node_modules/sass-true/sass/true" as True;
@use "../../../src/functions/global/has-position" as LibFunc;
@use "../../../src/development-utils/error" as Dev;

$test-cases-has-position-map: (
    0: Dev.err("The parameter of has-pos function must be in a string type."),
    bottom-right: false,
    0: Dev.err("The parameter of has-pos function must be in a string type."),
    344px: Dev.err("The parameter of has-pos function must be in a string type."),
    -0.5px: Dev.err("The parameter of has-pos function must be in a string type."),
    left: true,
    -92rem: Dev.err("The parameter of has-pos function must be in a string type."),
    94vh: Dev.err("The parameter of has-pos function must be in a string type."),
    top: true,
    80px: Dev.err("The parameter of has-pos function must be in a string type."),
    bottom: true,
    5.82px: Dev.err("The parameter of has-pos function must be in a string type."),
    "Just a string": false,
    212px: Dev.err("The parameter of has-pos function must be in a string type."),
    true: Dev.err("The parameter of has-pos function must be in a string type."),
    false: Dev.err("The parameter of has-pos function must be in a string type."),
    (1, 2, 4): Dev.err("The parameter of has-pos function must be in a string type.")
);

@each $case, $result in $test-cases-has-position-map {
    @include True.describe("[Function] has-pos(#{$case}), Result: #{$result}") {
        @include True.it("has-pos(#{$case}) value.") {
            @include True.assert-equal(LibFunc.has-pos($case), $result);
        }
    }
}
