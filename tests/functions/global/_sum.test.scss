@charset "UTF-8";

// @description
// * sum function.
// * This module tests a functionality of sum function.

// @access private

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @namespace global

// @module global/sum.test

// @dependencies:
// * - True.describe (true function).
// * - True.it (true function).
// * - True.assert-equal (true function).
// * - Dev.err (function).

// stylelint-disable function-name-case

@use "sass:map";
@use "true" as *;
@use "../../../src/functions/global/sum" as LibFunc;
@use "../../../src/development-utils/error" as Dev;

$test-cases-sum-map: (
    (1, 2, 3): 6,
    0: Dev.err("The parameter of sum function must be in a list type."),
    344px: Dev.err("The parameter of sum function must be in a list type."),
    -0.5px: Dev.err("The parameter of sum function must be in a list type."),
    -92px: Dev.err("The parameter of sum function must be in a list type."),
    (94vh, 12, 3px): Dev.err("Values of the list must has one unit only."),
    (80px, 2px, 3px): 85px,
    (80rem, 2rem, 3px): Dev.err("Values of the list must has one unit only."),
    "Just a number": Dev.err("The parameter of sum function must be in a list type."),
    true: Dev.err("The parameter of sum function must be in a list type."),
    false: Dev.err("The parameter of sum function must be in a list type."),
    (1, 2, 4): 7
);

@each $case, $result in $test-cases-sum-map {
    @include describe("[Function] sum(#{$case}), Result: #{$result}") {
        @include it("sum(#{$case}) value.") {
            @include assert-equal(LibFunc.sum($case), $result);
        }
    }
}
