@charset "UTF-8";

// @description
// * d-flex mixin.
// * This module tests a d-flex mixin.

// @access private

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @namespace main-props

// @module main-props/d-flex

// @dependencies:
// * - map.get (SASS function).
// * - True.describe (mixin function).
// * - True.it (true mixin).
// * - True.assert (true mixin).
// * - True.output (true mixin).
// * - True.expect (true mixin).
// * - LibMixin.d-flex (mixin).

@use "sass:map";
@use "true" as *;
@use "../../../../src/mixins/flex-props/main-props/_flex" as LibMixin;

// stylelint-disable value-no-vendor-prefix
// stylelint-disable declaration-block-no-duplicate-properties
// stylelint-disable value-keyword-case

$test-cases-d-flex-map: (
    "test-case-1": (
        selector: ".test-display-flex",
        expected: (
            -webkit-box,
            -moz-box,
            -ms-flexbox,
            -webkit-flex,
            flex,
        ),
    ),
);

@each $case-name, $case-data in $test-cases-d-flex-map {
    @include describe("[Mixin] d-flex for #{$case-name}") {
        @include it("should output correct display flex properties") {
            @include assert {
                @include output {
                    #{map.get($case-data, selector)} {
                        @include LibMixin.d-flex;
                    }
                }

                @include expect {
                    #{map.get($case-data, selector)} {
                        @each $value in map.get($case-data, expected) {
                            display: $value;
                        }
                    }
                }
            }
        }
    }
}
