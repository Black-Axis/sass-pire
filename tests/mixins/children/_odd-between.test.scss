@charset "UTF-8";

// @description
// * odd-between mixin.
// * This is a test cases for the odd-between mixin.

// @access public

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @namespace children

// @module children/odd-between

// @dependencies:
// * - map.get (SASS function).
// * - True.describe (mixin function).
// * - True.it (true mixin).
// * - True.assert (true mixin).
// * - True.output (true mixin).
// * - True.expect (true mixin).
// * - LibMixin.odd-between (mixin).

@use "sass:map";
@use "true" as *;
@use "../../../src/mixins/children/odd-between" as LibMixin;

$test-cases-odd-between-map: (
    "test-case-1": (
        selector: ".test-odd-between-1",
        first-num: 4,
        second-num: 10,
        expected: (
            nth-child: "nth-child(odd):nth-child(n+4):nth-child(-n+10)",
        ),
    ),
    "test-case-2": (
        selector: ".test-odd-between-2",
        first-num: 6,
        second-num: 8,
        expected: (
            nth-child: "nth-child(odd):nth-child(n+6):nth-child(-n+8)",
        ),
    ),
    "test-case-3": (
        selector: ".test-odd-between-3",
        first-num: 12,
        second-num: 100,
        expected: (
            nth-child: "nth-child(odd):nth-child(n+12):nth-child(-n+100)",
        ),
    ),
    "test-case-4": (
        selector: ".test-odd-between-4",
        first-num: 12,
        second-num: 0,
        expected: (
            nth-child: "nth-child(odd):nth-child(n+12):nth-child(-n+0)",
        ),
    ),
    "test-case-5": (
        selector: ".test-odd-between-5",
        first-num: 1,
        second-num: 2,
        expected: (
            nth-child: "nth-child(odd):nth-child(n+1):nth-child(-n+2)",
        ),
    ),
);

@each $case-name, $case-data in $test-cases-odd-between-map {
    @include describe("[Mixin] odd-between for #{$case-name}") {
        @include it("Should result a selector between two numbers but odd children only") {
            @include assert {
                @include output {
                    #{map.get($case-data, selector)} {
                        @include LibMixin.odd-between(map.get($case-data, first-num), map.get($case-data, second-num)) {
                            --sp-example-odd-between: done;
                        }
                    }
                }

                @include expect {
                    #{map.get($case-data, selector)}:#{map.get(map.get($case-data, expected), nth-child)} {
                        --sp-example-odd-between: done;
                    }
                }
            }
        }
    }
}
