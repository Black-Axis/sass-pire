@charset "UTF-8";

// @description
// * get-last-from function.
// * This function retrieves the first element from the given list.

// @access private

// @version 1.3.0

// @author Kitty Giraudel
// @link https://kittygiraudel.com/

// @license MIT

// @repository: https://github.com/krypton225/sass-pire

// @namespace list

// @module list/get-last-from

// @update We updated the use of the list library of Sass.

// @dependencies:
// * - $main-data-types (variable).
// * - list.index (SASS function).
// * - list.nth (SASS function).
// * - flatten-list (function).
// * - toggle (function).

// @param {List} $list
// * A list from which to retrieve the last element.

// @throw {Exception}
// * Throws an exception if the provided parameter is not a list or if the
// * list is empty.

// @example 1
// * .example1 {
// *   content: get-last-from((12, 43, 4));
// * }

// @output 1
// * .example1 {
// *   content: 4;
// * }

// @example 2
// * .example2 {
// *   content: get-last-from((22, 3), 5);
// * }

// @output 2
// * .example2 {
// *   content: 5;
// * }

// @return {Any} - Returns the last element from the list.

@use "sass:list";
@use "../../abstract/variables" as var;
@use "flatten-list" as func;
@use "../../development-utils/toggle-error-message" as Error;

@function get-last-from($list: ()) {
    @if type-of($list) != list {
        @return Error.toggle("The parameter of get-last-from function must be in a list type.");
    }

    @if length($list) == 0 {
        @return Error.toggle("You must enter the list values of the list in get-last-from function.");
    }

    @if type-of($list) != list {
        @if list.index(var.$main-data-types, $list) {
            $new-list: list.append($list, null);

            @return nth($new-list, length($new-list) - 1);
        }
    }

    $new-list: func.flatten($list);

    @return nth($new-list, length($new-list));
}
