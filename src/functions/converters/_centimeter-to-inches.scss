@charset "UTF-8";

// @description
// * cm-to-in function.
// * This function converts a value with centimeter unit into inches.

// @access public

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/krypton225/sass-pire

// @namespace converters

// @module converters/cm-to-in

// @dependencies:
// * - math.unit (SASS function).
// * - cut-unit (function).

// @param {Number} $cm-val
// * The value in centimeter unit to convert into inch.

// @throw {Exception}
// * Throws exceptions if the provided parameter is not a number, doesn't
// * have a unit, or doesn't have a centimeter unit.

// @example
// * .example {
// *   content: cm-to-in(12cm);
// * }

// @output
// * .example {
// *   content: 4.7244094488in;
// * }

// @return {Number} - Returns the converted value in inches.

@use "sass:math";
@use "../../abstract/variables" as var;
@use "../global/cut-unit" as func;
@use "../../development-utils/error" as dev;
@use "../../development-utils/toggle-error-message" as Error;

@function cm-to-in($cm-val) {
    @if type-of($cm-val) != number {
        @return Error.toggle("The parameter of cm-to-in function must be in a number type.");
    }

    // @if $cm-val < 0 {
    //     @return Error.toggle("The parameter value should be bigger than 0.");
    // }

    @if $cm-val == 0 {
        @return 0;
    }

    // stylelint-disable-next-line length-zero-no-unit
    @if $cm-val == 0cm {
        @return Error.toggle("The parameter don't need a unit if it equals to zero.");
    }

    @if math.unit($cm-val) != cm and $cm-val != 0 {
        @return Error.toggle(
            "$cm-val as argument must be with cm unit. The function is used to convert from centimeter to inches only."
        );
    }

    $actual-number: func.cut-unit($cm-val);

    // stylelint-disable-next-line number-max-precision
    @return $actual-number * 0.3937007874in;
}
