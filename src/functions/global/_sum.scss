@charset "UTF-8";

// @description
// * sum function.
// * Calculates the sum of numeric values in a list, including nested lists.

// @access public

// @version 1.1.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/krypton225/sass-pire

// @namespace global

// @module global/sum

// @dependencies:
// * - list.nth (SASS function).
// * - flatten-list (function).
// * - toggle (function).

// @param {...Number or List} $args
// * Variable number of arguments, either numbers or lists of numbers.

// @throws {Error}
// * If an argument is not a number or a list of numbers.

// @example 1
// * .example {
// *   content: sum(1, 2, 3);
// * }

// @output 1
// * .example {
// *   content: 6;
// * }

// @example 2
// * .example {
// *   content: sum((1, 2, 3));
// * }

// @output 2
// * .example {
// *   content: 6;
// * }

// @example 3
// * .example {
// *   content: sum((1, (2, 3), 4));
// * }

// @output 3
// * .example {
// *   content: 10;
// * }

// @example 4
// * .example {
// *   content: sum(((())));
// * }

// @output 4
// * .example {
// *   content: 0;
// * }

// @return {Number} The sum of the numeric values in the arguments.

@use "sass:list";
@use "../list/flatten-list" as func;
@use "../../development-utils/toggle-error-message" as Error;

@function sum($args...) {
    $sum: 0;
    $flatten-list: func.flatten($args);
    $length-of-list: list.length($flatten-list);

    @if length($flatten-list) == 0 {
        @return 0;
    }

    @for $item from 1 through $length-of-list {
        @if type-of(list.nth($flatten-list, $item)) != number {
            @return Error.toggle("You must pass values with list or number type only.");
        }

        $sum: $sum + list.nth($flatten-list, $item);
    }

    @return $sum;
}
