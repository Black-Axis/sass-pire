// * Align Items Mixin
// * This mixin provides a convenient way to set the `align-items` property
// * with vendor prefixes for better cross-browser compatibility.

// @module main-props

// @group main-props-align-items

// @param {String} $value - The value for the `align-items` property.
// * Allowed values: normal, stretch, start, end, flex-start, flex-end, center, baseline, inherit.
// * Default: normal.

// @throws {Error} Throws an error if the provided $value is not one of the allowed values.

// @example
// * .example {
// *   @include align-items(center);
// * }

// @output
// * .example {
// *   -webkit-box-align: center;
// *   -webkit-align-items: center;
// *   -ms-flex-align: center;
// *   -moz-align-items: center;
// *   align-items: center;
// * }

@charset "UTF-8";
@use "sass:list";
@import "../../../functions";

@mixin align-items($value: normal) {
    $align-items-props: (
        -webkit-box-align,
        -webkit-align-items,
        -ms-flex-align,
        -moz-align-items,
        align-items
    ) !default;

    // stylelint-disable-next-line scss/dollar-variable-empty-line-before
    $align-items-values: (normal, stretch, start, end, flex-start, flex-end, center, baseline, inherit) !default;

    @if is-in-list($align-items-values, $value) {
        @each $prop in $align-items-props {
            #{$prop}: $value;
        }
    }
}
