@charset "UTF-8";

// @description
// * inline-flex flex-end mixins.
// * These mixins provide a convenient way to apply inline flexbox
// * properties with the `flex-end` value for the `justify-content`
// * property.
// * The pattern used is (inline-flex)-(justify-content)-(align-items),
// * allowing you to easily set display to inline-flex, justify content
// * to flex-end, and align items to a specific value.

// @access public

// @author Khaled Mohamed

// @license MIT

// @namespace inline-flexbox

// @module inline-flexbox/fend

// @dependencies:
// * - inflex-prop (mixin).

// @example
// * .example {
// *   @include inflex-fend-normal(row);
// * }

// @output
// * .example {
// *   display: -webkit-inline-box;
// *   display: -webkit-inline-flex;
// *   display: -ms-inline-flexbox;
// *   display: -moz-inline-box;
// *   display: inline-flex;
// *   -webkit-box-orient: horizontal;
// *   -webkit-box-direction: normal;
// *   -webkit-flex-direction: row;
// *   -ms-flex-direction: row;
// *   -moz-flex-direction: row;
// *   -o-flex-direction: row;
// *   flex-direction: row;
// *   -webkit-box-pack: flex-end;
// *   -webkit-justify-content: flex-end;
// *   -ms-flex-pack: flex-end;
// *   -moz-justify-content: flex-end;
// *   justify-content: flex-end;
// *   -webkit-box-align: normal;
// *   -webkit-align-items: normal;
// *   -ms-flex-align: normal;
// *   -moz-align-items: normal;
// *   align-items: normal;
// * }

@use "../main-props/inflex-prop" as f;

// @mixin inflex-fend-normal
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-normal($dir: row) {
    @include f.inflex-prop($dir, flex-end, normal);
}

// @mixin inflex-fend-stretch
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-stretch($dir: row) {
    @include f.inflex-prop($dir, flex-end, stretch);
}

// @mixin inflex-fend-start
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-start($dir: row) {
    @include f.inflex-prop($dir, flex-end, start);
}

// @mixin inflex-fend-end
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-end($dir: row) {
    @include f.inflex-prop($dir, flex-end, end);
}

// @mixin inflex-fend-fstart
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-fstart($dir: row) {
    @include f.inflex-prop($dir, flex-end, flex-start);
}

// @mixin inflex-fend-fend
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-fend($dir: row) {
    @include f.inflex-prop($dir, flex-end, flex-end);
}

// @mixin inflex-fend-center
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-center($dir: row) {
    @include f.inflex-prop($dir, flex-end, center);
}

// @mixin inflex-fend-baseline
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-baseline($dir: row) {
    @include f.inflex-prop($dir, flex-end, baseline);
}

// @mixin inflex-fend-inh
// @param {String} $dir - The flex direction. Default: row.
// @module inline-flexbox-fend

@mixin inflex-fend-inh($dir: row) {
    @include f.inflex-prop($dir, flex-end, inherit);
}
