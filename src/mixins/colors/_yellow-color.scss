@charset "UTF-8";

// @description
// * yellow-color mixin.
// * This mixin generates CSS custom properties for using yellow colors
// * in your application or website.

// @access public

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @namespace colors

// @module colors/yellow-color

// @dependencies:
// * - var.$yellow-colors-map (variable).

// @example
// * @include yellow-color();

// @output
// * :root {
// *     --sp-yellow-50: hsl(60, 100%, 98%);
// *     --sp-yellow-100: hsl(60, 100%, 95%);
// *     --sp-yellow-150: hsl(60, 85%, 87%);
// *     --sp-yellow-200: hsl(60, 75%, 75%);
// *     --sp-yellow-250: hsl(60, 70%, 64%);
// *     --sp-yellow-300: hsl(60, 70%, 56%);
// *     --sp-yellow-350: hsl(60, 65%, 47%);
// *     --sp-yellow-400: hsl(60, 65%, 39%);
// *     --sp-yellow-450: hsl(60, 60%, 35%);
// *     --sp-yellow-500: hsl(60, 60%, 31%);
// *     --sp-yellow-550: hsl(60, 55%, 28%);
// *     --sp-yellow-600: hsl(60, 55%, 24%);
// *     --sp-yellow-650: hsl(60, 50%, 22%);
// *     --sp-yellow-700: hsl(60, 50%, 19%);
// *     --sp-yellow-750: hsl(60, 45%, 16%);
// *     --sp-yellow-800: hsl(60, 45%, 14%);
// *     --sp-yellow-850: hsl(60, 40%, 12%);
// *     --sp-yellow-900: hsl(60, 40%, 10%);
// *     --sp-yellow-950: hsl(60, 35%, 8%);
// * }

@use "../../abstract/global-variables" as var;

@mixin yellow-color() {
    :root {
        @each $yellow-color-degree, $actual-color in var.$yellow-colors-map {
            --sp-yellow-#{$yellow-color-degree}: #{$actual-color};
        }
    }
}
