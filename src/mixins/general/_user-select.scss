@charset "UTF-8";

// @description
// * u-select mixin.
// * Apply user-select property with cross-browser support.

// @author Khaled Mohamed

// @namespace general

// @module general/u-select

// @param {String} $val
// * The value for the user-select property.
// *  - 'none': No text selection is allowed.
// *  - 'auto': Standard selection behavior.
// *  - 'text': Only text selection is allowed.
// *  - 'contain': Text selection is allowed, but not outside of
// *    the element's boundaries.
// *  - 'all': Text, image, and other selection is allowed.
// *  - 'inherit', 'initial', 'revert', 'revert-layer',
// *    'unset': CSS standard values.

// @example
// * .example {
// *   @include u-select(none);
// * }

// @output
// * .example {
// *   -webkit-user-select: none;
// *   -moz-user-select: none;
// *   -ms-user-select: none;
// *   user-select: none;
// * }

// stylelint-disable scss/dollar-variable-empty-line-before

@use "sass:list";
@use "../../functions/global/is-in-list" as func;

@mixin u-select($value: auto) {
    $user-select-props: (-webkit-user-select, -moz-user-select, -ms-user-select, user-select) !default;

    $user-select-values: (none, auto, text, contain, all, inherit, initial, revert, revert-layer, unset) !default;

    @if type-of($value) != string {
        @error "You must pass a value to u-select mixin in string type.";
    }

    @if func.is-in-list($user-select-values, $value) {
        @each $prop in $user-select-props {
            #{$prop}: $value;
        }
    }
}
