@charset "UTF-8";

// @description
// * square mixin.
// * Create a square shape with equal width and height.

// @access public

// @version 1.4.1

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/ZexLabs/sass-pire

// @namespace general

// @module general/square

// @dependencies:
// * - meta.type-of (SASS function).
// * - math.unit (SASS function).
// * - is-in-list (function).
// * - toggle (function).

// @param {Number} $one-side
// * The length of one side of the square.

// @example
// * .example {
// *   @include square(50px);
// * }

// @output
// * .example {
// *   width: 50px;
// *   height: 50px;
// * }

// @note
// * There are two mixins in this file.
// * The first is the (square) mixin and second is (sq) mixin.
// * The second one is for only simplicity when using (square) mixin.
// * The core logic of (sq) mixin is to call the first one.
// * You can use one of them as you want.

@use "sass:meta";
@use "sass:list";
@use "sass:math";
@use "../../functions/global/is-in-list" as func;
@use "../../development-utils/toggle-error-message" as Error;

@mixin square($one-side: 1px) {
    $all-units: (
        cm,
        mm,
        in,
        px,
        pt,
        pc,
        "%",
        em,
        ex,
        ch,
        rem,
        vw,
        vh,
        vmin,
        vmax,
        dpi,
        dpcm,
        dppx,
        vw,
        svw,
        lvw,
        dvw,
        vh,
        lvh,
        dvh,
        vi,
        svi,
        lvi,
        vmin,
        svmin,
        lvmin,
        dvmin,
        vmax,
        svmax,
        lvmax,
        dvmax,
        vb,
        lvb,
        dvb
    ) !default;

    @if meta.type-of($one-side) == number {
        @if not unitless($one-side) {
            @if func.is-in-list($all-units, math.unit($one-side)) {
                width: $one-side;
                height: $one-side;
            }
        } @else {
            content: Error.toggle("The parameter of square mixin has a unit of a number type.");
        }
    } @else {
        content: Error.toggle("The parameter of square mixin must be in a number type.");
    }
}

@mixin sq($one-side: 1px) {
    @include square($one-side);
}
