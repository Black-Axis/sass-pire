@charset "UTF-8";

// @description
// * reset mixin.
// * This mixin provides a simple way to control the all resets for
// * some tags's styles as base layer for any web page.
// * This reset belongs to Andy Bell.
// * You can find it here: https://andy-bell.co.uk/a-modern-css-reset/
// * We updated some of his resets to benefit from it.
// * You can find others here:
// * https://www.joshwcomeau.com/css/custom-css-reset/

// @access private

// @version 1.5.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/ZexLabs/sass-pire

// @namespace general

// @module general/reset

// @dependencies:
// * - LibMixin1.prefixing-web (mixin);
// * - LibMixin1.prefixing-web-o (mixin);

@use "../../abstract/config" as var;
@use "../../mixins/vendor-prefixes/prefix" as LibMixin1;
@use "../../mixins/flex-props/flexbox/center" as LibMixin2;
@use "../../mixins/media-queries/screens/media-query" as LibMixin3;
@use "../../mixins/transform/translate" as LibMixin4;
@use "./shape-margin" as LibMixin5;

@mixin reset() {
    // * Box sizing rules.
    *,
    *::before,
    *::after {
        margin: 0;
        padding: 0;

        $box-sizing-props: (
            -moz-box-sizing: border-box,
            -webkit-box-sizing: border-box,
            box-sizing: border-box
        ) !default;

        @each $prop, $value in $box-sizing-props {
            #{$prop}: $value;
        }
    }

    // * Set core root defaults
    html,
    html:focus-within {
        @media (prefers-reduced-motion: no-preference) {
            scroll-behavior: smooth;
        }

        @media (prefers-reduced-motion: reduce) {
            scroll-behavior: auto;
        }
    }

    // * Set core body defaults
    body {
        --body-min-height: 100dvh;

        min-block-size: var(--body-min-height);
        min-height: var(--body-min-height);
        line-height: 1.5;

        // * This is for improve text rendering in the browsers
        -webkit-font-smoothing: antialiased;

        // stylelint-disable-next-line scss/selector-no-redundant-nesting-selector
        :where(&) {
            overflow-wrap: break-word;

            $hyphens-props: (-webkit-hyphens, -ms-hyphens, hyphens) !default;

            @each $prop in $hyphens-props {
                #{$prop}: auto;
            }
        }
    }

    // * Remove default margin
    body,
    h1,
    h2,
    h3,
    h4,
    p,
    figure,
    blockquote,
    dl,
    dd {
        margin: 0;
    }

    // * Avoid text overflows
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        overflow-wrap: break-word;
    }

    // * Remove list styles on ul, ol elements with a list role which suggests
    // * default styling will be removed
    ul[role="list"],
    menu[role="list"],
    ol[role="list"] {
        list-style: none;
    }

    // * Set default styles for menu tag
    menu {
        display: block;

        $main-unicode-bidi-props-values: (-webkit-isolate, -moz-isolate, isolate) !default;

        @each $value in $main-unicode-bidi-props-values {
            unicode-bidi: $value;
        }
    }

    // * A elements that don't have a class get default styles
    a:not([class]) {
        $text-decoration-ink-props: (-webkit-text-decoration-skip, text-decoration-skip-ink) !default;

        // stylelint-disable-next-line scss/dollar-variable-empty-line-before
        $text-decoration-line-props: (-webkit-text-decoration-line, text-decoration-line) !default;

        @each $prop in $text-decoration-ink-props {
            #{$prop}: auto;
        }

        @each $prop in $text-decoration-line-props {
            #{$prop}: underline;
        }

        text-decoration-thickness: max(0.08em, 1px);
        text-underline-offset: 0.15em;
    }

    // * Make images easier to work with
    img,
    picture,
    video,
    canvas,
    svg {
        --asset-max-width: 100%;
        --asset-height: auto;

        max-inline-size: var(--asset-max-width);
        max-width: var(--asset-max-width);
        block-size: var(--asset-height);
        height: var(--asset-height);
        display: block;
        font-style: italic;
        background-repeat: no-repeat;
        background-size: cover;

        @include LibMixin5.shape-margin(1rem);
    }

    // * Inherit fonts for inputs and buttons
    input,
    button,
    textarea,
    select {
        font: inherit;
    }

    // * Reset styles of blockquote and q tag
    blockquote,
    q {
        quotes: none;

        &::before,
        &::after {
            content: none;
        }
    }

    // * Removes spacing between cells in tables
    table {
        border-collapse: collapse;
        border-spacing: 0;
    }

    body > :is(header, footer),
    main,
    section,
    article {
        container-type: inline-size;
    }

    :where([hidden]) {
        display: none;
    }

    :focus-visible {
        --outline-offset-size: max(1px, 0.15em);
        --outline-width: 0.063rem;
        --outline-style: solid;
        // stylelint-disable-next-line value-keyword-case
        --outline-color: currentColor;

        outline: var(--outline-width) var(--outline-style) var(--outline-color);
        outline-offset: var(--outline-offset-size);
    }

    // * Scroll margin allowance above anchor links
    :target {
        scroll-padding-block-start: 2rem;
    }

    // * Scroll margin allowance below focused elements to ensure they are clearly in view
    :focus {
        scroll-padding-block-end: 8vh;
    }

    // * Remove all animations, transitions and smooth scroll for
    // * people that prefer not to see them
    @media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
            @include LibMixin1.prefixing-web(animation-duration, 0.01ms);
            @include LibMixin1.prefixing-web(animation-iteration-count, 1);
            @include LibMixin1.prefixing-web-o(transition-duration, 0.01ms);

            scroll-behavior: smooth;
        }
    }

    // * Add default styles for noscript tag with its default text
    noscript {
        --noscript-width: 100dvw;
        --noscript-height: 100dvh;

        inline-size: var(--noscript-width);
        width: var(--noscript-width);
        block-size: var(--noscript-height);
        height: var(--noscript-height);
        position: relative;

        @include LibMixin2.flex-center-center;

        font-size: 1.125rem;
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        font-weight: 700;
        background-color: #d4d4d4b6;

        &::before {
            --noscript-before-pseudo-left: 50%;
            --noscript-before-pseudo-top: 0;

            content: url('data:image/svg+xml,<svg width="45px" height="45px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" stroke="%23c34b4b"><g id="SVGRepo_bgCarrier" stroke-width="0" /><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round" stroke="%23CCCCCC" stroke-width="0.72" /><g id="SVGRepo_iconCarrier"><path d="M12 16H12.01M12 8V12M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z" stroke="%23c34b4b" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" /></g></svg>');
            position: absolute;
            inset-inline-start: var(--noscript-before-pseudo-left);
            left: var(--noscript-before-pseudo-left);
            inset-block-start: var(--noscript-before-pseudo-top);
            top: var(--noscript-before-pseudo-top);

            @include LibMixin4.translate(-50%, -50%);

            z-index: 1;

            @include LibMixin3.mq-gen(min, h, mob) {
                --noscript-before-pseudo-top: 42%;

            }

            @include LibMixin3.mq-gen(min, h, mob-wide) {
                --noscript-before-pseudo-top: 48%;
            }

            @include LibMixin3.mq-gen(min, h, xs) {
                --noscript-before-pseudo-top: 50%;
            }
        }

        &::after {
            --noscript-after-pseudo-width: 100%;
            --noscript-after-pseudo-padding-x: 2rem;
            --noscript-after-pseudo-top: 55%;
            --noscript-after-pseudo-left: 50%;

            content: var.$no-script-text;
            inline-size: var(--noscript-after-pseudo-width);
            width: var(--noscript-after-pseudo-width);
            padding-inline: var(--noscript-after-pseudo-padding-x);
            padding-right: var(--noscript-after-pseudo-padding-x);
            padding-left: var(--noscript-after-pseudo-padding-x);
            position: absolute;
            inset-block-start: var(--noscript-after-pseudo-top);
            top: var(--noscript-after-pseudo-top);
            inset-inline-start: var(--noscript-after-pseudo-left);
            left: var(--noscript-after-pseudo-left);

            @include LibMixin4.translate(-50%, -25%);

            z-index: 1;
            text-align: center;
            color: #c34b4b;
        }
    }

    /* This is for accessibility purposes */
    .sr-only {
        --sr-only-width: 1px;
        --sr-only-height: 1px;

        inline-size: var(--sr-only-width);
        width: var(--sr-only-width);
        block-size: var(--sr-only-height);
        height: var(--sr-only-height);
        border: 0;
        margin: -1px;
        padding: 0;
        position: absolute;
        clip: rect(0, 0, 0, 0);
        overflow: hidden;
    }
}
