@charset "UTF-8";

// @description
// * This file uses the `reset` mixin to compile based on if the
// * user want to use @layer version of CSS or not.

// @access public

// @version 3.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @namespace general

// @module general/reset

// @dependencies:
// * - LibMixin1.prefixing-web (mixin).
// * - LibMixin2.shape-margin (mixin).
// * - LibMixin3.banner (mixin).
// * - LibMixin4.mq-gen (mixin).
// * - LibMixin5.flex-between-center (mixin).

// @example 1
// * In the top of the SCSS file, you can write like this:
// * @import "your-path-to-node_modules/sass-pire/src/mixins/general/_reset.scss";
// * @include reset;

// @example 2
// * In the top of the SCSS file, you can also write like this:
// * @layer reset, .., your-all-components, ..etc;
// * @layer rest {
// *   @import "your-path-to-node_modules/sass-pire/src/mixins/general/_reset.scss";
// *   @include reset;
// * }

// @example 3
// * You can use it whatever you want.

@use "../../mixins/vendor-prefixes/prefix" as LibMixin1;
@use "../../mixins/general/shape-margin" as LibMixin2;
@use "../../mixins/general/banner" as LibMixin3;
@use "../../mixins/media-queries/screens/media-query" as LibMixin4;
@use "../../mixins/flex-props/flexbox/between" as LibMixin5;

// * stylelint-disable-next-line at-rule-empty-line-before

@mixin reset() {
    @include LibMixin3.banner;

    // * Box sizing rules.
    *,
    *::before,
    *::after {
        margin: 0;
        padding: 0;

        $box-sizing-props: (
            -moz-box-sizing: border-box,
            -webkit-box-sizing: border-box,
            box-sizing: border-box) !default;

        @each $prop, $value in $box-sizing-props {
            #{$prop}: $value;
        }
    }

    // * Set core root defaults
    html,
    html:focus-within {
        @media (prefers-reduced-motion: no-preference) {
            scroll-behavior: smooth;
        }

        @media (prefers-reduced-motion: reduce) {
            scroll-behavior: auto;
        }
    }

    // * Set core body defaults
    body {
        --sp-body-min-height: 100dvh;

        min-block-size: var(--sp-body-min-height);
        min-height: var(--sp-body-min-height);
        line-height: 1.5;

        // * This is for improve text rendering in the browsers
        -webkit-font-smoothing: antialiased;

        // stylelint-disable-next-line scss/selector-no-redundant-nesting-selector
        :where(&) {
            overflow-wrap: break-word;

            $hyphens-props: (
                -webkit-hyphens,
                -ms-hyphens,
                hyphens) !default;

            @each $prop in $hyphens-props {
                #{$prop}: auto;
            }
        }
    }

    // * Remove default margin
    body,
    h1,
    h2,
    h3,
    h4,
    p,
    figure,
    blockquote,
    dl,
    dd {
        margin: 0;
    }

    // * Avoid text overflows
    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        overflow-wrap: break-word;
    }

    // * Remove list styles on ul, ol elements with a list role which suggests
    // * default styling will be removed
    ul[role="list"],
    menu[role="list"],
    ol[role="list"] {
        list-style: none;
    }

    main,
    header,
    footer,
    section,
    article,
    aside,
    nav,
    menu,
    details,
    summary,
    figcaption,
    figure,
    hgroup,
    img,
    picture,
    video,
    canvas,
    svg {
        display: block;
    }

    sup,
    sub {
        position: relative;
        font-size: 75%;
        line-height: 0;
        vertical-align: baseline;
    }

    sup {
        top: -0.5em;
    }

    sub {
        bottom: -0.25em;
    }

    // * Set default styles for menu tag
    menu {
        $main-unicode-bidi-props-values: (
            -webkit-isolate,
            -moz-isolate,
            isolate) !default;

        @each $value in $main-unicode-bidi-props-values {
            unicode-bidi: $value;
        }
    }

    // * A elements that don't have a class get default styles
    a:not([class]) {
        $text-decoration-ink-props: (
            -webkit-text-decoration-skip,
            text-decoration-skip-ink) !default;

        // stylelint-disable-next-line scss/dollar-variable-empty-line-before
        $text-decoration-line-props: (
            -webkit-text-decoration-line,
            text-decoration-line) !default;

        @each $prop in $text-decoration-ink-props {
            #{$prop}: auto;
        }

        @each $prop in $text-decoration-line-props {
            #{$prop}: underline;
        }

        text-decoration-thickness: max(0.08em, 1px
    );
    text-underline-offset: 0.15em;
    }

    // * Make images easier to work with
    img,
    picture,
    video,
    canvas,
    svg {
        --sp-asset-max-width: 100%;
        --sp-asset-height: auto;

        max-inline-size: var(--sp-asset-max-width);
        max-width: var(--sp-asset-max-width);
        block-size: var(--sp-asset-height);
        height: var(--sp-asset-height);
        font-style: italic;
        background-repeat: no-repeat;
        background-size: cover;

        @include LibMixin2.shape-margin(1rem);
    }

    figcaption {
        font-style: italic;
    }

    // * Inherit fonts for inputs and buttons
    input,
    button,
    textarea,
    select {
        font: inherit;
    }

    // * Reset styles of blockquote and q tag
    blockquote,
    q {
        quotes: none;

        &::before,
        &::after {
            content: none;
        }
    }

    // * Removes spacing between cells in tables
    table {
        border-collapse: collapse;
        border-spacing: 0;
    }

    @supports selector(:is) {
        body> :is(header, footer),
        main,
        section,
        article {
            container-type: inline-size;
        }
    }

    @supports not selector(:is) {
        body>header,
        body>footer,
        main,
        section,
        article {
            container-type: inline-size;
        }
    }

    @supports selector(:where) {
        :where([hidden]) {
            display: none;
        }
    }

    @supports not selector(:where) {
        [hidden] {
            display: none;
        }
    }

    @supports selector(:focus-visible) {
        :focus-visible {
            // stylelint-disable-next-line value-keyword-case 
            outline: max(1px, 0.15em) solid currentColor;
            outline-offset: max(1px, 0.15em);
        }
    }

    @supports not selector(:focus-visible) {
        :focus {
            // stylelint-disable-next-line value-keyword-case 
            outline: max(1px, 0.15em) solid currentColor;
            outline-offset: max(1px, 0.15em);
        }
    }

    // * Scroll margin allowance above anchor links
    :target {
        scroll-padding-block-start: 2rem;
    }

    // * Scroll margin allowance below focused elements to ensure they are clearly in view
    :focus {
        scroll-padding-block-end: 8vh;
    }

    // * Remove all animations, transitions and smooth scroll for
    // * people that prefer not to see them
    @media (prefers-reduced-motion: reduce) {
        *,
        *::before,
        *::after {
            @include LibMixin1.prefixing-web(animation-duration, 0.01ms);
            @include LibMixin1.prefixing-web(animation-iteration-count, 1);
            @include LibMixin1.prefixing-web-o(transition-duration, 0.01ms);

            scroll-behavior: auto;
        }
    }

    dialog {
        --sp-dialog-max-width: 90%;
        --sp-dialog-max-height: 85dvh;
        --sp-dialog-padding-x: 1rem;
        --sp-dialog-padding-y: 1.25rem;
        --sp-dialog-border: 1px solid hsl(0deg 0% 91.81%);
        --sp-dialog-scrollbar-bg: transparent;
        --sp-dialog-scrollbar-width: none;

        max-width: var(--sp-dialog-max-width);
        max-inline-size: var(--sp-dialog-max-width);
        max-height: var(--sp-dialog-max-height);
        max-block-size: var(--sp-dialog-max-height);
        margin: auto;
        padding: 0;
        border: var(--sp-dialog-border);
        border-radius: 0.5rem;
        overscroll-behavior: contain;
        scroll-behavior: smooth;

        // Hide scrollbar for Firefox
        scrollbar-width: var(--sp-dialog-scrollbar-width);

        // Hide scrollbar for IE and Edge
        -ms-overflow-style: var(--sp-dialog-scrollbar-width);
        scrollbar-color: var(--sp-dialog-scrollbar-bg) var(--sp-dialog-scrollbar-bg);
        animation: sp-bottom-to-top 0.25s ease-in-out forwards;

        @include LibMixin4.mq-gen(min, w, sm) {
            --sp-dialog-max-width: 45rem;
        }

        &::-webkit-scrollbar {
            --sp-dialog-scrollbar-width: 0;

            width: var(--sp-dialog-scrollbar-width);
            inline-size: var(--sp-dialog-scrollbar-width);
            display: none;
        }
    
        &::-webkit-scrollbar-track {
            background-color: var(--sp-dialog-scrollbar-bg);
        }
    
        &::-webkit-scrollbar-thumb {
            background-color: var(--sp-dialog-scrollbar-bg);
        }
        
        &::backdrop {
            background-color: hsl(0deg 0% 0%);
            opacity: 0.5;
        }

        .dialog-header {
            padding-top: var(--sp-dialog-padding-y);
            padding-bottom: var(--sp-dialog-padding-y);
            padding-block: var(--sp-dialog-padding-y);
            padding-right: var(--sp-dialog-padding-x);
            // stylelint-disable-next-line declaration-block-no-redundant-longhand-properties
            padding-left: var(--sp-dialog-padding-x);
            padding-inline: var(--sp-dialog-padding-x);
            border-bottom: var(--sp-dialog-border);
            position: sticky;
            top: 0;
            
            @include LibMixin5.flex-between-center;

            background-color: hsl(0deg 0% 100%);

            .dialog-close {
                --sp-dialog-close-size: 1.5rem;

                width: var(--sp-dialog-close-size);
                inline-size: var(--sp-dialog-close-size);
                height: var(--sp-dialog-close-size);
                block-size: var(--sp-dialog-close-size);
                border: none;
                border-radius: 5px;
                outline: 1px solid transparent;
                font-size: var(--sp-dialog-close-size);
                line-height: var(--sp-dialog-close-size);
                background-image: url('data:image/svg+xml,<svg width="20px" height="20px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M13.06 12L17.48 7.57996C17.5537 7.5113 17.6128 7.4285 17.6538 7.3365C17.6948 7.2445 17.7168 7.14518 17.7186 7.04448C17.7204 6.94378 17.7018 6.84375 17.6641 6.75036C17.6264 6.65697 17.5703 6.57214 17.499 6.50092C17.4278 6.4297 17.343 6.37356 17.2496 6.33584C17.1562 6.29811 17.0562 6.27959 16.9555 6.28137C16.8548 6.28314 16.7555 6.30519 16.6635 6.34618C16.5715 6.38717 16.4887 6.44627 16.42 6.51996L12 10.94L7.58 6.51996C7.43782 6.38748 7.24978 6.31535 7.05548 6.31878C6.86118 6.32221 6.67579 6.40092 6.53838 6.53834C6.40096 6.67575 6.32225 6.86113 6.31882 7.05544C6.3154 7.24974 6.38752 7.43778 6.52 7.57996L10.94 12L6.52 16.42C6.37955 16.5606 6.30066 16.7512 6.30066 16.95C6.30066 17.1487 6.37955 17.3393 6.52 17.48C6.66062 17.6204 6.85125 17.6993 7.05 17.6993C7.24875 17.6993 7.43937 17.6204 7.58 17.48L12 13.06L16.42 17.48C16.5606 17.6204 16.7512 17.6993 16.95 17.6993C17.1488 17.6993 17.3394 17.6204 17.48 17.48C17.6204 17.3393 17.6993 17.1487 17.6993 16.95C17.6993 16.7512 17.6204 16.5606 17.48 16.42L13.06 12Z" fill="%23000000" /></svg>');
                background-position: center;
                background-repeat: no-repeat;
                background-color: hsl(0deg 0% 91.81%);
                cursor: pointer;
            }
        }
        
        .dialog-content {
            --sp-dialog-padding-x: 1rem;
            --sp-dialog-padding-y: 1rem;
    
            padding-top: var(--sp-dialog-padding-y);
            padding-bottom: var(--sp-dialog-padding-y);
            padding-block: var(--sp-dialog-padding-y);
            padding-right: var(--sp-dialog-padding-x);
            // stylelint-disable-next-line declaration-block-no-redundant-longhand-properties
            padding-left: var(--sp-dialog-padding-x);
            padding-inline: var(--sp-dialog-padding-x);
            overscroll-behavior: contain;
            -webkit-overflow-scrolling: touch;

            &::-webkit-scrollbar {
                width: 0;
            }
            
            &::-webkit-scrollbar-track {
                background: transparent;
            }
            
            &::-webkit-scrollbar-thumb {
                background-color: transparent;
            }
        }

        .dialog-footer {
            --sp-dialog-padding-x: 1rem;
    
            padding-top: var(--sp-dialog-padding-y);
            padding-bottom: var(--sp-dialog-padding-y);
            padding-block: var(--sp-dialog-padding-y);
            padding-right: var(--sp-dialog-padding-x);
            // stylelint-disable-next-line declaration-block-no-redundant-longhand-properties
            padding-left: var(--sp-dialog-padding-x);
            padding-inline: var(--sp-dialog-padding-x);
            border-top: var(--sp-dialog-border);
            position: sticky;
            bottom: 0;
            background-color: hsl(0deg 0% 100%);
        }
    }

    @keyframes sp-bottom-to-top {
        0% {
            opacity: 0;
            transform: translateY(10%);
        }
    
        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    @media print {
        @page {
            margin: 1.875rem; // 30px
        }
        
        a[href^="http"]::after {
            content: " (" attr(href) ")";
        }
    }

    /* This is for accessibility purposes */
    .sr-only {
        --sp-sr-only-width: 1px;
        --sp-sr-only-height: 1px;

        inline-size: var(--sp-sr-only-width);
        width: var(--sp-sr-only-width);
        block-size: var(--sp-sr-only-height);
        height: var(--sp-sr-only-height);
        border: 0;
        margin: -1px;
        padding: 0;
        position: absolute;
        clip: rect(0, 0, 0, 0);
        overflow: hidden;
        white-space: nowrap;
    }

    /* This is for accessibility purposes */
    .not-sr-only {
        --sp-not-sr-only-width: auto;
        --sp-not-sr-only-height: auto;

        inline-size: var(--sp-not-sr-only-width);
        width: var(--sp-not-sr-only-width);
        block-size: var(--sp-not-sr-only-height);
        height: var(--sp-not-sr-only-height);
        position: static;
        padding: 0;
        margin: 0;
        overflow: visible;
        clip: auto;
        white-space: normal;
    }
}
