@charset "UTF-8";

// @description
// * circle mixin.
// * This mixin generates CSS properties to create a circular element
// * with a specified side length. It sets the width, height, and
// * border-radius properties to create a perfect circle.

// @access public

// @version 1.1.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/krypton225/sass-pire

// @namespace general

// @module general/circle

// @dependencies:
// * - meta.type-of (SASS function).
// * - math.unit (SASS function).
// * - $main-units (variable).
// * - is-in-list (function).

// @param {Number} $side
// * The length of one side of the circle. It must be a number.

// @example
// * .example {
// *   @include circle(50px);
// * }

// @output
// * .example {
// *   width: 50px;
// *   height: 50px;
// *   border-radius: 50%;
// * }

// @note
// * The mixin assumes that the provided side length will create a circle.
// * It's essential to ensure that the specified side length is the same
// * for both width and height to maintain a perfect circle.

@use "sass:meta";
@use "sass:list";
@use "sass:math";
@use "../../abstract/variables" as var;
@use "../../functions/global/is-in-list" as func;

@mixin circle($one-side) {
    $get-unit: math.unit($one-side);

    @if meta.type-of($one-side) != number {
        @error "$one-side variable must be of number type.";
    }

    @if func.is-in-list(var.$main-units, $get-unit) {
        width: #{$one-side};
        height: #{$one-side};
        border-radius: 50%;
    }
}
