// * Circle Mixin
// * This mixin generates CSS properties to create a circular element with a specified
// * side length. It sets the width, height, and border-radius properties to create a perfect circle.

// @author Khaled Mohamed

// @module general

// @group general-circle

// @param {Number} $side - The length of one side of the circle. It must be a number.

// @example
// * .my-circle {
// *   @include circle(50px);
// * }

// @output
// * .my-circle {
// *   width: 50px;
// *   height: 50px;
// *   border-radius: 50%;
// * }

// @note
// * The mixin assumes that the provided side length will create a circle. It's essential to ensure
// * that the specified side length is the same for both width and height to maintain a perfect circle.

@charset "UTF-8";
@use "sass:list";
@use "sass:math";
@use "../../abstract/variables" as var;
@use "../../functions/global/is-in-list" as func;

@mixin circle($side) {
    $get-unit: math.unit($side);

    @if type-of($side) != number {
        @error "$side variable must be of number type.";
    }

    @if func.is-in-list(var.$main-units, $get-unit) {
        width: #{$side};
        height: #{$side};
        border-radius: 50%;
    }
}
