@charset "UTF-8";

// @description
// * prefixing mixins.
// * This mixin generates CSS properties with vendor prefixes for
// * cross-browser compatibility. It applies the specified property and
// * value with prefixes for webkit, moz, ms, and o.

// @access public

// @author Khaled Mohamed

// @license MIT

// @namespace vendor-prefixes

// @module vendor-prefixes/prefix

// @dependencies:
// * - Nothing.

// @param {String} $property
// * The CSS property.

// @param {Any} $value
// * The CSS value for the property.

// @example
// * .example {
// *   @include prefixing-all("transform", "rotate(45deg)");
// * }

// @output
// * .example {
// *   -webkit-transform: rotate(45deg);
// *   -moz-transform: rotate(45deg);
// *   -ms-transform: rotate(45deg);
// *   -o-transform: rotate(45deg);
// *   transform: rotate(45deg);
// * }

@mixin prefixing-all($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-web-moz-ms($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    -ms-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-web-moz($property, $value) {
    -webkit-#{$property}: $value;
    -moz-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-web-ms($property, $value) {
    -webkit-#{$property}: $value;
    -ms-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-web-o($property, $value) {
    -webkit-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-moz-o($property, $value) {
    -moz-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-ms-o($property, $value) {
    -ms-#{$property}: $value;
    -o-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-ms($property, $value) {
    -ms-#{$property}: $value;
    #{$property}: $value;
}

@mixin prefixing-web($property, $value) {
    -webkit-#{$property}: $value;
    #{$property}: $value;
}
