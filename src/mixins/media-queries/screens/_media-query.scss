@charset "UTF-8";

// @description
// * mq-general mixin.
// * Generate a media query with specified type,
// * dimension, and breakpoint.

// @access public

// @version 1.1.1

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/Black-Axis/sass-pire

// @reference: https://developer.mozilla.org/en-US/docs/Web/CSS/@media

// @namespace general

// @module screens/mq-general

// @dependencies:
// * - map.has-key (SASS function).
// * - map.get (SASS function).
// * - var.$breakpoints (variable).
// * - LibFunc.is-in-list (function).
// * - Error.throw (function).

// @param {String} $type
// * The type of query you want (min | max).

// @param {String} $dimension
// * The dimension you want, which can be width, height, w, or h.

// @param {String} $breakpoint-name
// * Specify the breakpoint name from the breakpoints map.

// @example
// * .example {
// *   @include mq-general($type: max, $dimension: h, $breakpoint-name: lg) {
// *     width: 100px;
// *   }
// * }

// @output
// * @media only screen and (max-height: 1199px) {
// *   .example {
// *     width: 100px;
// *   }
// * }

// @note
// * There are two mixins in this file.
// * The first is the (mq-general) mixin and second is (mq-gen) mixin.
// * The second one is for only simplicity when using (mq-general) mixin.
// * The core logic of (mq-gen) mixin is to call the first one.
// * You can use one of them as you want.

// stylelint-disable media-query-no-invalid

@use "sass:map";
@use "../../../abstract/global-variables" as var;
@use "../../../functions/global/is-in-list" as LibFunc;
@use "../../../development-utils//toggle-error-message" as Error;

@mixin mq-general($type: min, $dimension: w, $breakpoint-name: md) {
    $main-mq-types: (min, max) !default;
    $main-dimensions: (width, w, height, h) !default;

    @if LibFunc.is-in-list($main-mq-types, $type) {
        @if LibFunc.is-in-list($main-dimensions, $dimension) {
            @if map.has-key(var.$breakpoints, $breakpoint-name) {
                $actual-dimension: map.get(var.$breakpoints, $breakpoint-name);

                @if $type == max {
                    $actual-dimension: $actual-dimension - 1px;
                }

                @if $dimension == width or $dimension == w {
                    @media only screen and (#{$type}-width: #{$actual-dimension}) {
                        @content;
                    }
                } @else if $dimension == height or $dimension == h {
                    @media only screen and (#{$type}-height: #{$actual-dimension}) {
                        @content;
                    }
                }
            } @else {
                content: Error.throw("Please, Enter a valid breakpoint! #{$breakpoint-name} does not exist in (#{var.$breakpoints})");
            }
        } @else {
            content: Error.throw("The parameter of mq-general (or mq-gen) mixin must be one of: (#{$main-dimensions}).");
        }
    } @else {
        content: Error.throw("The type parameter of mq-general mixin must be one of: (#{$main-mq-types}).");
    }
}

@mixin mq-gen($type: min, $dimension: w, $breakpoint-name: md) {
    @include mq-general($type, $dimension, $breakpoint-name) {
        @content;
    }
}
