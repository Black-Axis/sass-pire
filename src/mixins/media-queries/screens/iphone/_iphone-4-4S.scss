@charset "UTF-8";

// @description
// * iphone-4-4S mixin.
// * Generate a media query with for iphone-4-4S device.

// @access public

// @author Khaled Mohamed

// @license MIT

// @namespace iphone

// @module iphone/iphone-4-4S

// @dependencies:

// @param {String} $type
// * The type of query you want (min | max).

// @param {String} $dimension
// * The dimension you want, which can be width, height, w, or h.

// @param {String} $breakpoint-name
// * Specify the breakpoint name from the breakpoints map.

// @example
// * .example {
// *   @include iphone-4-4S($type: max, $dimension: h, $breakpoint-name: lg) {
// *     width: 100px;
// *   }
// * }

// @output
// * @media only screen and (max-height: 1199px) {
// *   .example {
// *     width: 100px;
// *   }
// * }

@use "sass:list";
@use "../../../../functions/global/is-in-list" as func;

@mixin iphone-4-4S($orientation-type: portrait) {
    $all-orientations-types: (landscape, land, l, portrait, port, p, all) !default;
    $min-device-width: 320px !default;
    $max-device-width: 480px !default;
    $min-device-pixel-ratio: 2 !default;

    @if func.is-in-list($all-orientations-types, $orientation-type) {
        @if $orientation-type == landscape or $orientation-type == land or $orientation-type == l {
            @media only screen and (min-device-width: $min-device-width) and (max-device-width: $max-device-width) and (-webkit-min-device-pixel-ratio: $min-device-pixel-ratio) and (orientation: landscape) {
                @content;
            }
        } @else if $orientation-type == portrait or $orientation-type == port or $orientation-type == p {
            @media only screen and (min-device-width: $min-device-width) and (max-device-width: $max-device-width) and (-webkit-min-device-pixel-ratio: $min-device-pixel-ratio) and (orientation: portrait) {
                @content;
            }
        } @else if $orientation-type == all {
            @media only screen and (min-device-width: $min-device-width) and (max-device-width: $max-device-width) and (-webkit-min-device-pixel-ratio: $min-device-pixel-ratio) {
                @content;
            }
        }
    }
}
