@charset "UTF-8";

// @description
// * right mixin.
// * This mixin generates CSS logical properties for right property.
// * It will generate right & inset-inline-end properties.

// @access public

// @version 1.0.0

// @author Khaled Mohamed

// @license MIT

// @repository: https://github.com/ZexLabs/sass-pire

// @namespace logical-props

// @module logical-props/right

// @dependencies:
// * - meta.type-of (SASS function).
// * - math.unit (SASS function).
// * - list.index (SASS function).
// * - var.var.$all-units (variable).
// * - Error.toggle (function).

// @example
// * .example {
// *   @include right(2rem);
// * }

// @output
// * .example {
// *    inset-inline-end: 2rem;
// *    right: 2rem;
// * }

@use "sass:meta";
@use "sass:list";
@use "sass:math";
@use "../../abstract/global-variables" as var;
@use "../../development-utils/toggle-error-message" as Error;

@mixin right($value: 0) {
    @if meta.type-of($value) != number {
        content: Error.toggle("The parameter of right mixin must be in a number type.");
    } @else {
        $get-unit: math.unit($value);

        @if $get-unit != "" {
            @if list.index(var.$all-units, $get-unit) {
                inset-inline-end: $value;
                right: $value;
            } @else {
                content: Error.toggle("The parameter of right mixin must be one of these values: (#{var.$all-units}).");
            }
        } @else {
            content: Error.toggle("The parameter of right mixin must have a unit.");
        }
    }
}
